{"version":3,"sources":["components/Statistics/Statistic.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistic__list","statistic__item","Section","title","children","section","Notification","message","this","props","Component","Container","container","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,gBAAkB,qC,qBCAzFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,mKCoBfC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAAAC,GAAM,OAChB,wBACEC,UAAWC,IAAEC,IAEbC,KAAK,SACL,gBAAeJ,EACfK,QAAS,kBAAMP,EAAgBE,IALjC,SAOGA,GALIA,O,gBCkBIM,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIV,UAAWC,IAAEU,gBAAjB,UACE,qBAAIX,UAAWC,IAAEW,gBAAjB,kBAAwCN,KACxC,qBAAIN,UAAWC,IAAEW,gBAAjB,qBAA2CL,KAC3C,qBAAIP,UAAWC,IAAEW,gBAAjB,iBAAuCJ,KACvC,qBAAIR,UAAWC,IAAEW,gBAAjB,mBAAyCH,KACzC,qBAAIT,UAAWC,IAAEW,gBAAjB,+BACqBF,EADrB,W,gBCOSG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACGF,GAAS,oBAAId,UAAWC,IAAEa,MAAjB,SAAyBA,IAClCC,M,iBCHDE,E,4JACJ,WACE,OAAO,mBAAGjB,UAAWC,IAAEiB,QAAhB,SAA0BC,KAAKC,MAAMF,c,GAFrBG,aAUZJ,I,iBCHAK,MARf,YAAkC,IAAbP,EAAY,EAAZA,SACnB,OAAO,qBAAKf,UAAWC,IAAEsB,UAAlB,SAA8BR,KCGjCS,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPX,gBAAkB,SAAAE,GAChB,EAAK2B,UAAS,SAAAC,GAAS,sBAAQ5B,EAAS4B,EAAU5B,GAAU,O,EAE9D6B,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBqB,gCAAkC,WAChC,IAAQvB,EAAS,EAAKmB,MAAdnB,KACFG,EAAQ,EAAKmB,qBACnB,OAAOnB,EAAQqB,KAAKC,MAAOzB,EAAOG,EAAS,KAAO,G,4CAEpD,WACE,MAA+BU,KAAKM,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQU,KAAKS,qBACblB,EAAqBS,KAAKU,kCAC1BhC,EAAkBsB,KAAKtB,gBACvBD,EAAUoC,OAAOC,KAAKd,KAAKM,OAEjC,OACE,eAAC,EAAD,CAAWzB,UAAU,MAArB,UACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiBA,MAGrB,cAAC,EAAD,CAASiB,MAAM,aAAf,SACGL,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcQ,QAAQ,+B,GA3ChBG,aAmDHG,ICrDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0512808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__list\":\"Statistic_statistic__list__1IhEm\",\"statistic__item\":\"Statistic_statistic__item__1Ygkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ROV7\",\"title\":\"Section_title__3VdVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3Pnse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1GEi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1CwRh\"};","import s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map(option => (\r\n    <button\r\n      className={s.btn}\r\n      key={option}\r\n      type=\"button\"\r\n      data-feedback={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistic.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={s.statistic__list}>\r\n      <li className={s.statistic__item}>good:{good}</li>\r\n      <li className={s.statistic__item}>neutral:{neutral}</li>\r\n      <li className={s.statistic__item}>bad:{bad}</li>\r\n      <li className={s.statistic__item}>total:{total}</li>\r\n      <li className={s.statistic__item}>\r\n        Positive feedback:{positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    return <p className={s.message}>{this.props.message}</p>;\r\n  }\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\nimport Container from './components/Container';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  onLeaveFeedback = option => {\r\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total ? Math.round((good / total) * 100) : 0;\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    const onLeaveFeedback = this.onLeaveFeedback;\r\n    const options = Object.keys(this.state);\r\n\r\n    return (\r\n      <Container className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}